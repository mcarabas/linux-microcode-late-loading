--- find-debuginfo.sh.orig	2014-03-04 19:27:49.318782137 -0700
+++ find-debuginfo.sh	2014-03-05 17:09:21.364094567 -0700
@@ -2,7 +2,7 @@
 #find-debuginfo.sh - automagically generate debug info and file list
 #for inclusion in an rpm spec file.
 #
-# Usage: find-debuginfo.sh [--strict-build-id] [-g] [-r] [-m]
+# Usage: find-debuginfo.sh [--strict-build-id] [-g|-g1] [-r] [-m]
 #	 		   [-o debugfiles.list]
 #			   [--run-dwz] [--dwz-low-mem-die-limit N]
 #			   [--dwz-max-die-limit N]
@@ -10,6 +10,8 @@
 #			   [builddir]
 #
 # The -g flag says to use strip -g instead of full strip on DSOs.
+# The -g1 flag says to use strip -g instead of full strip on
+# everything, DSO or not.
 # The --strict-build-id flag says to exit with failure status if
 # any ELF binary processed fails to contain a build-id note.
 # The -r flag says to use eu-strip --reloc-debug-sections.
@@ -65,6 +67,9 @@
     dwz_max_die_limit=$2
     shift
     ;;
+  -g1)
+    strip_g=full
+    ;;
   -g)
     strip_g=true
     ;;
@@ -125,13 +130,27 @@
 
 strip_to_debug()
 {
-  local g=
+  local use_objcopy=false
   local r=
   $strip_r && r=--reloc-debug-sections
-  $strip_g && case "$(file -bi "$2")" in
-  application/x-sharedlib*) g=-g ;;
+  case "$strip_g" in
+	true) case "$(file -bi "$2")" in
+	        application/x-sharedlib*) use_objcopy=true ;;
+	      esac;;
+        full) use_objcopy=true;;
   esac
-  eu-strip --remove-comment $r $g -f "$1" "$2" || exit
+  # Note: eu-strip fails to remove debugging info in files containing
+  # debugging relocations at present. objcopy works fine, so use that.
+  # (This does mean that .comment sections don't get stripped, but this
+  # seems an insignificant problem for now.  When elfutils is fixed this
+  # hack can be removed.)
+  if $use_objcopy; then
+	objcopy --only-keep-debug "$2" "$1" || exit
+	objcopy --strip-debug "$2" "$2.tmp" || exit
+	mv -f "$2.tmp" "$2" || exit
+  else
+	eu-strip --remove-comment $r -f "$1" "$2" || exit
+  fi
   chmod 444 "$1" || exit
 }
 
